Html responses is the default in Flask
escape() ...stay tuned, it helps render an injection attack as a text and not as a script in the user browser.
<name> in the route captures as a value from the URL and passess it to the view function see the routing explanation below in routing.

from markupsafe import escape
@app.route("/<name>")
def hello (name)
  return f"Hello, {escape(name)}!"


ROUTING 

the route() decorator binds a function to a URL 
@app.route('/')
def index ():
  return "index page"
@app.route('/hello')
def hello():
  return "hello world"


LETS ADD URL DYNAMIC and attach multiple rules to a function
from markupsafe import escape 

@app.route('/user/<username>')
def show_user_profile(username): # show the user profile for that user 
  return f'user {escape(username)}'

@app.route('/post/<int:post_id>')
def show_post(Post_id): #show the post with the given id
  return f'post{post_id}'

@app.route('/path/<path:subpath>')
def show_subpath(subpath)
  return f'subpath {escape(subpath)}'


UNIQUE URL/ REDIRECTION BEHAVIOUR
@app.route('/projects/')  ## the trailing slash means this is simmilar to a folder 
def projects():
  return 'the project page'

@app.route('/about') ## the trailing slash means this is simmilar to a file of a file system
def about():
  return 'the about page'


URL building 
